#!/usr/bin/env php

<?php
function includeIfExists($file)
{
    if (file_exists($file)) {
        return include $file;
    }
}
if (
    (!$loader = includeIfExists(__DIR__.'/../vendor/autoload.php'))
    && (!$loader = includeIfExists(__DIR__.'/../../../autoload.php'))
) {
    die(
        'You must set up the project dependencies, run the following commands:'.PHP_EOL.
        'curl -s http://getcomposer.org/installer | php'.PHP_EOL.
        'php composer.phar install'.PHP_EOL
    );
}

use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Reference;
use Symfony\Component\Console\Output\ConsoleOutput;

$container = new ContainerBuilder();

$container->register('get_selenium_cmd', 'BeubiQA\Application\Selenium\GetSeleniumCommand')
        ->addArgument(new Reference('exe_finder'));

$container->register('exe_finder', 'Symfony\Component\Process\ExecutableFinder');

$container->register('process', 'Symfony\Component\Process\Process')
        ->addArgument('');

$container->register('start_cmd', 'BeubiQA\Application\Command\StartSeleniumCommand')
        ->addArgument(new Reference('get_selenium_cmd'))
        ->addMethodCall('setProgressBar', array(new Reference('progress_bar')))
        ->addMethodCall('setHttpClient', array(new Reference('http_client')))
        ->addMethodCall('setProcess', array(new Reference('process')));

$container->register('stop_cmd', 'BeubiQA\Application\Command\StopSeleniumCommand')
        ->addMethodCall('setProgressBar', array(new Reference('progress_bar')))
        ->addMethodCall('setHttpClient', array(new Reference('http_client')));

$container->register('download_cmd', 'BeubiQA\Application\Command\DownloadSeleniumCommand')
        ->addMethodCall('setHttpClient', array(new Reference('http_client')))
        ->addMethodCall('setProgressBar', array(new Reference('progress_bar')));

$container->register('show_cmd', 'BeubiQA\Application\Command\ShowSeleniumCommand');

$container->register('http_client', 'GuzzleHttp\Client');

$container->register('progress_bar', 'Symfony\Component\Console\Helper\ProgressBar')
        ->addArgument(new ConsoleOutput())
        ->addArgument(30000000);

$container->register('app', 'Symfony\Component\Console\Application')
    ->addMethodCall('add', array(new Reference('start_cmd')))
    ->addMethodCall('add', array(new Reference('stop_cmd')))
    ->addMethodCall('add', array(new Reference('download_cmd')))
    ->addMethodCall('add', array(new Reference('show_cmd')));

$container->get('app')->run();